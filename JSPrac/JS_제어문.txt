제어문 : 기본적인 명령의 흐름은 왼쪽에서 오른쪽으로, 위에서 아래로 흐른다.
         이런 명령의 흐름을 변경하는 명령어가 제어문에 해당된다.

1. 분기문 : 조건이나 값에 따라 다른 문장을 수행하는 것과

 - if문
   if(표현식){
        표현식이 Truthy일 때 수행할 내용
   } else if {
        앞의 표현식이 Fasly이고 현재 표현식이 Truthy일 때 수행할 내용
   } else {
        앞의 모든 식이 Falsy일 때 수행할 내용
   }
-> else if 는 0개 이상 여러번 작성가능하고 else는 생략하거나 1번만 작성해야 한다.
   if와 else if, else는 별도의 블록으로 처리되어야 하고 가장 위의 표현식이 T라면 아래 표현식은 확인하지 않는다.
   그러므로 항상 분기문 사용시 가장 T가 많은 경우를 가장 윗줄의 표현식(조건문)을 삽입해 효율을 올리고 늘 주석으로 이를 알린다
   feat(코딩테스트)_전체를 못해도 중간까지 하는게 이득


 - switch문 : 값에 의한 분기
   switch(표현식){
        case x : 
            표현식이 x인 경우에 수행할 내용
            break;
        
        case y : 
            표현식이 y인 경우에 수행할 내용
            break;
        ....
        default :
            표현식이 x, y, .... 앞의 어디에도 해당되지 않을 경우 수행할 내용
            break;
   }
   -> 각 case당 break;없을 시 break를 만날 때까지 모든 case에 대한 수행을 하게된다, default 키워드 문 자체와 그 안의 break는 생략가능
      값에 자리에는 반드시 값이 아닌 또 다른 표현식이 와도 상관없다.
      case문은 여러개가 올 수 있지만, 생략불가
      switch(true){}로 작성하고 내부 case문에 Boolean표현식을 작성해 사용하는 경우도 있음
      
비트 연산자

1. & : AND 2개 값이 모두 1일 때만 1을 반환하고 그외에는 0을 반환
2. | : OR 둘 중 하나의 값이 1이면 1을 반환하고 모두 0일 때만 0반환
3. ^ : XOR 2개 값이 같은 경우 0, 다른 경우 1 반환
4. >> : 이진수를 오른쪽으로 이동시키는 연산자, 첫번째 비트는 이동 대상이 아니다
5. >>> : 이진수를 오른쪽으로 이동시키는 연산자, 첫번째 비트도 이동 대상이어서 양수의 경우 >>와 동일하나 음수의 경우 >>와 다르게 동작
6. <<, <<<

논리 연산자

1. && : AND 두값이 모두 참인 경우에만 True반환 아닌 경우 false반환
2. || : OR 두 값중 하나만 true여도 ture를 반환하고 두 값모두 false일 경우 false반환
3. ! : NOT 반대 값 반환

연산과정중에 &&인 경우 앞의 데잍터가 false이면 뒤의 내용은 확인하지 않고 ||의 경우도 앞의 데이터가 True이면 뒤의 내용을 확인하지 않는다.
실제로 컴퓨터 연산에서도 그렇게 작용하기 때문에 &&, ||을 사용하는 경우 뒤의 조건식을 연산하지 않기 위해 첫번째 조건 값이 무엇이 나오는지
먼저 확인해서 연산과정을 효율적으로 만들 필요가 있다.

Boolean이외의 데이터를 가지고 &&, ||연산이 가능하나 이 경우 겨로가가 Boolean이 아닐 수 있다.
0, null, NAN(not a number), undefined,"" -> false로 간주되는 것 Falsy
이 외 Falsy가 아닌 값들은 Truthy라 하며 모두 True로 간주되어진다.